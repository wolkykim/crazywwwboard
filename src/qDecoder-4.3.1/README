==================================================================

                      qDecoder CGI Library

              Powered by Nobreak Technologies, Inc.

==================================================================

C O N T E N T S

1. 라 이 센 스 (License Agreement)
2. 소프트웨어 정보 (Software & Contact Information)
3. 버젼별 수정사항
4. 함수별 기능 설명
  1. CGI 관련 함수군
  2. COOKIE 관련 함수군
  3. 형식화된 Configuration FILE을 다루는 함수군  
  4. FILE 관련 함수군
  5. 화면 출력 함수군
  6. 문자열 관련 함수군
  7. 시간 관련 함수군
  8. 기타 함수군
5. 예제 (Examples)


+--------------------------------------------------------------------+
| I. 라 이 센 스 (License Agreement)                                 |
+--------------------------------------------------------------------+

I-1. 총    칙

(1) 본 계약서는 소프트웨어의 사용을 허락하는 것일 뿐, 소유권, 저작권을
    이전하는 것은 아닙니다.

I-2. 사용 허락

사용자께서는
(1) 소프트웨어를 네트워크나 인터넷에 접속하고 있는 서버(이하, '서버'
    라고 함)의 저장 매체에 설치하여 사용하실수 있습니다.

(2) 백업(backup)을 위해 소프트웨어와 파생된 자료를 복제해서 보관하실수
    있습니다.

(3) 배포당시의 원판이 수정되지 않았다면 소프트웨어 패키지를 반포할 수
    있습니다. 단, 그 복제물의 소유권은 'Nobreak'에 있으며, 반포자는
    써플라이어(배포자)가 되는것은 아닙니다.

I-3. 서비스와 무보증

'Nobreak Technologies'는
(1) 제품은 최적으로 판단되는 상태로 제공되는 것으로서, 그 사용과 성능에
    관해서는, 일체 보증하지 않습니다. 단지, 지속적인 서비스와 신뢰적인
    문제해결을 제공합니다.

(2) 제품, 또는 도큐멘테이션(documentation)을 사용함으로써 얻어지는 성능,
    결과에 대해서 보증할 수 없습니다. 단, 사용자로부터 결함(bug) 지적이
    있을 경우, 개선하도록 노력합니다.

(3) 제3자의 권리 침해, 상품성, 특정 목적의 적합성에 관하여 명시적, 암시적
    보증은 하지 않습니다.

I-4. 책임 제한

'Nobreak Technologies'는 소프트웨어로 인한 일실이익(逸失利益)을 포함한
결과적, 우발적, 또는 특별한 손해에 대해서, 그것이 'Nobreak Technologies'
의 대리점이 이러한 손해가 발생할 가능성에 대해서 알고 있더라도, 책임을
지지 않습니다.

I-6. 저작권, 소유권

본 소프트웨어는 'Nobreak Technologies' 또는 서플라이어(supplier)가 소유
하며, 한국, 일본, 미국등의 저작권에 관한 법률, 국제법, 국제조약, 국제적인
저작권협정에 의해 보호를 받습니다.


+--------------------------------------------------------------------+
| II. 소프트웨어 정보 (SOFTWARE & CONTACT INFORMATION)               |
+--------------------------------------------------------------------+

II-1. 소프트웨어 정보 (Software Information)
  - 명    칭 : qDecoder
  - 판 번 호 : 4.3.1
  - 종    류 : CGI Library
  - Language : C/C++
  - 사용환경 : All kind Unix (Solaris, HP/UX, FreeBSD, Linux, Etc.)
  - 제작회사 : Nobreak Technologies, Inc.
  - 배 포 처 : ftp://ftp.nobreak.com/pub/qDecoder/
  - 배 포 일 : 1999년 3월 28일


+--------------------------------------------------------------------+
| III. 버젼별 수정사항                                               |
+--------------------------------------------------------------------+
[Version 4.3.1]
    * Patched functions
    Makefile의 install, deinstall 수정

[Version 4.3]
    * Patched functions
    qDecoder()
    - SSI로 넘겨지는 쿼리를 받을 수 있도록 패치

    * New functions
    int       qAwkOpen(char *filename, char separator);
    int       qAwkNext(char array[][256]);
    void      qAwkClose(void);

    Entry     *qGetFirstEntry(void);
    char      *qitocomma(int value);

[Version 4.2]
    * Patched functions
    qDecoder()
    - Macintosh IE 관련 패치
    qGgienv()
    - Apache 1.3 관련 패치
    qGetGMTime
    - 성능 향상
    
    * New functions
    char      *qCGIname(void);
    void      qDownload(char *filename);
    char      *qGetEnv(char *envname, char *nullstr);
    char      *qStrBig(char *str);
    char      *qStrStr(char *orgstr, char *tokstr);

[Version 4.0.1]
    * Patched functions
    qfDecoder()
    - 파일에서 한행의 길이제약을 없앰.
    qDecoder()
    - multipart/form-data형식 내부 알고리즘 수정.

[Version 4.0]
    * Patched functions
    qDecoder()
    - File Uploading 지원
    qfDecoder()
     행의 첫글자가 #일경우 주석으로 처리
    qURLencode()
    - '@', '.'을 인코딩 하지 않도록 수정
    _decode_query() 함수 qURLdecode()로 함수명변경
    qCheckEmail()
    - ID중에 . 를 허용함.
    qPrintf(), qPuts()
    - mode 10 - 16 이 새로 지원됨.

[Version 3.5]
    * Patched functions
    _get_query()
    - 환경변수 미설정 확인추가
    qCgienv()
    - Netscape와 Explore에서 공통 사용되는 환경변수로 최적화
    qSetCookie()
    - expire 날짜 지정 char* 에서 int 타입으로 변경
    qError()
    - 로그 기능 추가
    qURLencode()
    - 숫자, 영문를 인코딩 하지 않도록 수정

    * New functions
    void      qErrLog(char *filename);

[Version 3.4.2]
    * Patched functions
    qDecoder(), qfDecoder(), qcDecoder() :
    - Linked List 알고리즘 수정
    qPuts() :
    - 몇몇 시스템에서 컴파일시 warning을 일으키던 문제 수정 

[Version 3.4.1]
    * Patched functions
    qPrintf(), qPuts() :
    - 문자열 마지막에 출력되는 공백 제거

[Version 3.4]
    * Patched functions
    qCheckEmail() : '-' , '_'가 포함된 Email도 가능토록 수정
    qPrintf(), qPuts() :
    - 문자열의 내용중 &lt , &gt를 '<' , '>'로 보여주는점 수정
      (&amp;lt , &amp;gt로 출력함)
    - 'mailto:guest@hongik.ac.kr' 같은 문자열만을 자동 링크하였으나,
      'guest@hongik.ac.kr' 의 형태도 자동 링크 수행함 

    * New functions
    void      qSetCookie(char *name, char *value, char *exp_days, char *domain, char *path, char *secure);
    char      *qURLencode(char *str);
    time_t    qGetGMTime(char *gmt, time_t plus_sec);

[Version 3.3.1]
    * Patched functions
    qDecoder() : Query value내의 '&' 문자를 분리자로 인식하던점 수정

[Version 3.3]
     int       qcDecoder(void);
    char      *qcValue(char *name);
    void      qcPrint(void);
    void      qcFree(void);

[Version 3.2.2]
    int       qUpdateCounter(char *filename);
    void      qPuts(int mode, char *buf);
    int       qCheckURL(char *url);

[Version 3.2]
    int       qReadCounter(char *filename);
    int       qSaveCounter(char *filename, int number);
    int       qStr09AZaz(char *str);

[Version 3.1]
    int       qPrintf(int mode, char *format, ...);
    int       qCheckEmail(char *email);
    void      qError(char *format, ...);

[Version 3.0]
    Entry     *qfDecoder(char *filename);
    char      *qfValue(Entry *first, char *name);
    void      qfPrint(Entry *first);
    void      qError(char *format, ...);

    char      *qRemoveSpace(char *str);

[Version 2.2]
    int       qDecoder(void);
    char      *qValue(char *name);
    void      qPrint(void);
    void      qFree(void);

    void      qContentType(char *mimetype);

    void      qCgienv(Cgienv *env);
    struct tm *qGetTime(void);

    int       qCheckFile(char *filename);
    int       qSendFile(char *filename);


+--------------------------------------------------------------------+
| IV. 함수별 기능 설명                                               |
+--------------------------------------------------------------------+

IV-1. CGI 관련 함수군

  int    qDecoder(void);
  기능 : 다음 형식의 인코딩된 Query String을 해석하여 Linked List에 저장.
         - application/x-www-form-urlencoded (%xx로 인코딩되는 일반형)
         - multipart/form-data               (File Uploading에 사용됨)

         [ 예제 : application/x-www-form-urlencoded ]
         웹상에서 직접 사용자로부터 입력을 받을경우 주로 사용한다.
         다음과 같은 URL Encoding 형식의 일반적 [HTML] 문이 전달될경우
         링크드 리스트에는 [결과]와 같이 저장되고, [C]와 같이 사용한다.

         [HTML] 
         <form method="post" action="input.cgi">
           사용자번호 <input type="text" name="userID"><br>
           <input type="submit">
         </form>

         [결과]
         name  = "userID"
         value = "사용자가 입력한 문자열"

         [C]
         #include <stdio.h>
         #include "qDecoder.h"
         void main(void) {
           char *id;
           qContentType("text/html");
           id = qValue("userID");
           printf("%s", id);
         }

         [ 예제 : multipart/form-data ]
         파일 업로딩 등을 원할때 주로 사용된다.
         다음과 같은 형식의 [HTML] 문이 사용되고, 로컬PC에서 'a.gif'란
         128byte 파일을 업로드 할경우, 내부적으로 [결과]와 같이 저장되며
         [C]와 같이 사용할수 있다.

         [HTML]
         <form method="post" action="upload.cgi" enctype='multipart/form-data'>
           사용자번호 <input type="text" name="userID"><br>
           업로드파일 <input type="file" name="binary"><br>
           <input type="submit">
         </form>

         [결과]
         name  = "userID"
         value = "사용자가 입력한 문자열"

         name  = "binary"
         value = "a.gif의 2진 자료"
         name  = "binary.length"
         value = "128"
         name  = "binary.filename"
         value = "a.gif"

         [C]
         #include <stdio.h>
         #include <stdlib.h>
         #include "qDecoder.h"

         void main(void) {
           FILE *fp;
           char *userID;
           char *filedata, *filelen, *filename;
           int  i, len;

           qContentType("text/plain");

           userID = qValue("userID");

           filedata = qValue("binary");
           filelen  = qValue("binary.length");     
           filename = qValue("binary.filename");

           len = atoi(filelen);

           fp = fopen(filename, "wb");
           for(i = 0; i < len; i++) fprintf(fp, "%c", filedata[i]);
           fclose(fp);

           printf("%s : %s(%sbytes) saved.", userID, filename, filelen);
         }

         HTML상에서 type=text 일경우 사용은 동일하다.
         type=file 일경우에는 '변수명.length'와 '변수명.name'의 변수가
         자동으로 삽입된다.
         '변수명.length'는 자료의 바이트수가 저장되며, '변수명.name'은
         사용자가 전송한 파일명이 저장된다.
         저장할 파일명을 별도로 받고싶을경우, 입력을 type=text 로 받아
         처리하면 되지만, 본 라이브러리에서는 사용자가 로컬 PC에서 
         브라우징한 파일명 자체를 알려준다. 파일명은 \ 등의 기호가 제거
         되어 들어간다.("C:\Data\a.gif"일경우 "a.gif"만이 저장된다)
         복귀값의 카운터는 type=file 일경우 총 3개의 리스트가 생성되지만
         이것은 1개의 자료에 대한 처리이므로 1개로 처리한다.
         내부적으로 저장되는 리스트는 qPrint() 를 활용하여 확인할수 있다.

  복귀 : 성공시 전달받은 인자의 갯수, 에러시 -1
  사용 : int num;
         num = qDecoder();
  
  char   *qValue(char *name);
  기능 : Linked List에서 변수명에대한 값(문자열)을 찾아 포인터를 넘겨줌
         qDecoder()이 사전에 호출이 안되었으면, 자동으로 수행
  복귀 : 변수명이 존재하면 변수값의 포인터, 변수명이 없으면 NULL
  사용 : char *test;
         test = qValue("변수명");

  void   qPrint(void);
  기능 : 프로그램의 Debugging용으로 전달된 인자를 모두 출력한다.
  사용 : qPrint();

  void   qFree(void);
  기능 : qDecoder()에 의해 할당된 Memory를 해제한다.
  사용 : qFree();

  Entry  *qGetFirstEntry(void);
  기능 : Linked List의 첫번째 Entry 포인터를 복귀한다.
  사용 : Entry *first;
         first = qGetFirstEntry();

  char   *qURLencode(char *str);
  기능 : 문자열을 URL Encoding규칙으로 변환한다.
  복귀 : Encoding된 string pointer, 해제(free)는 사용자가 하여야 한다.
  사용 : char *encstr;
         encstr = qURLencode("안녕하세요?");

  void   qURLdecode(char *str);
  기능 : %xx로 인코딩된 자료를 해독한다.
  사용 : char *encstr;
         qURLdecode(encstr);

  void   qContentType(char *mimetype);
  기능 : MimeType을 출력한다.
         여러번 호출되어도 단 한번만 수행한다.
  사용 : qContentType("text/html");
         qContentType("image/gif");

  void   qCgienv(Cgienv *env);
  기능 : CGI의 환경변수와 시간을 구조체에 저장한다.
         구조체의 멤버구성은 qDecoder.h를 참조하기 바란다.
  사용 : Cgienv *myenv;
         qCgienv(myenv);

  char   *qGetEnv(char *envname, char *nullstr);
  기능 : getenv()함수와 동일하게 동작하나, NULL 대신 디폴드 스트링을 복귀한다.
  사용 : char *name;
         name = qGetEnv("SCRIPT_NAME", "/cgi-bin/CrazyWWWBoard.cgi");
         name = qGetEnv("SCRIPT_NAME", NULL);

  char   *qCGIname(void);
  기능 : 환경변수 SCRIPT_NAME에서 프로그램명만을 해석하여 복귀한다.
  사용 : char *cginame;
         cginame = qCGIname();

IV-2. COOKIE 관련 함수군

  void   qSetCookie(char *name, char *value, int exp_days, char *domain, char *path, char *secure);
  기능 : name=value에 해당하는 COOKIE를 설정함.
  주의 : qContentType()이 호출되기 전에 사용하여야 한다.
  사용 : char *name, *value;
         name = "NAME", value = "Kim";
         /* NAME=Kim 이란 정보를 30일간 클라이언트에 저장한다 */
         qSetCookie(name, value, 30, NULL, NULL, NULL);

  int    qcDecoder(void);
  기능 : COOKIE를 해석하여 Linked List에 저장
  복귀 : 성공시 전달받은 인자의 갯수, 에러시 -1
  사용 : int num;
         num = qcDecoder();
  
  char   *qcValue(char *name);
  기능 : Linked List에서 변수명에대한 값(문자열)을 찾아 포인터를 넘겨줌
         qcDecoder()이 사전에 호출이 안되었으면, 자동으로 수행
  복귀 : 변수명이 존재하면 변수값의 포인터, 변수명이 없으면 NULL
  사용 : char *test;
         test = qcValue("변수명");

  void   qcPrint(void);
  기능 : 프로그램의 Debugging용으로 COOKIE값을 모두 출력한다.
  사용 : qcPrint();

  void   qcFree(void);
  기능 : qcDecoder()에 의해 할당된 Memory를 해제한다.
  사용 : qcFree();

IV-3. 형식화된 Configuration FILE을 다루는 함수군  

  ## 아래와 같은 형식의 화일을 읽어 Linked List에 저장한다.
  ---- test.conf ----
  # this is comment.
  name  = Kim
  phone = 123-4567
  addr  = 한국
  -------------------

  Entry  *qfDecoder(char *filename);
  기능 : 화일을 읽어 Linked List에 저장한다. (화일의 행길이 제약없음)
  복귀 : Linked List의 첫번째 레코드 포인터, 에러시 NULL
  사용 : Entry *FirstRecord;
         FirstRecord = qfDecoder("test.conf");

  char   *qfValue(Entry *first, char *name);
  기능 : 변수명의 변수값을 얻는다.
  복귀 : 성공시 변수값의 포인터, 실패시 NULL
  사용 : char *name;
         name = qfValue(FirstRecord, "name");

  void   qfPrint(Entry *first);
  기능 : 프로그램의 Debugging용으로 해석한 인자를 모두 출력한다.
  사용 : qfPrint(FirstRecord);

  void   qfFree(Entry *first);
  기능 : 할당된 Memory를 반환한다.
  사용 : qfFree(FirstRecord);

  ## 아래와 같은 형식의 카운터 화일을 다룬다.
  ---- number.dat ----
  74
  --------------------

  int    qReadCounter(char *filename);
  기능 : 화일명의 카운터 화일을 읽는다.
  복귀 : 성공시 카운터값, 에러시 0
  사용 : int count;
         count = qReadCounter("number.dat");

  int    qSaveCounter(char *filename, int number);
  기능 : 지정된 화일명에 카운터 값을 저장(갱신)한다.
  복귀 : 성공시 1, 에러시 0
  사용 : qSaveCounter("number.dat", 75);

  int    qUpdateCounter(char *filename){
  기능 : 지정된 화일명의 카운터 값을 1 증가시킨다.
  복귀 : 성공시 기존 카운터값 + 1, 에러시 0
  사용 : int count;
         count = qUpdateCounter("number.dat");

  ## UNIX 시스템의 AWK 함수와 같은 기능을 한다.
  ---- /etc/passwd ----
  shpark:x:1008:1000:Sang-hyun Park:/home/shpark:/bin/csh
  teamwork:x:1011:1000:Seung-young Kim:/home/teamwork:/bin/csh
  kikuchi:x:1015:2000:KIKUCHI:/home/kikuchi:/bin/csh
  ---------------------

  int    qAwkOpen(char *filename, char separator);
  기능 : 파일을 열고, 구분자를 설정한다.
  복귀 : 성공시 1, 파일을 열 수 없을경우 0

  int    qAwkNext(char array[][256]);
  기능 : 한행을 읽어 들여, 인자로 주어진 배열에 저장한다.
  사용 :  char array[7][256];
          qAwkOpen("/etc/passwd", ':');
          qAwkNext(array)
          printf("ID=%s, Name=%s", array[0], array[5]);
          qAwkClose();

  void   qAwkClose(void);
  기능 : 파일을 닫는다.

IV-4. FILE 관련 함수군

  int    qCheckFile(char *filename);
  기능 : 화일의 존재여부를 파악한다.
  복귀 : 화일이 존재 하면 1, 화일이 없으면 0
         Permission에 의해 접근 불가능한 화일도 화일이 없다고 판단한다.
  사용 : if(qCheckFile("test.dat") == 0)qError("File not found");

  int    qSendFile(char *filename);
  기능 : 화일의 내용을 출력한다.
  복귀 : 정상 출력 1, 에러시 0
  사용 : qContentType("image/gif");
         qSendFile("mypic.gif");

         qContentType("text/html");
         qSendFile("myhtml.html");
         
IV-5. 화면 출력 함수군

  int    qPrintf(int mode, char *format, ...);
  기능 : printf()와 동일한 사용방법으로 HTML TAG의 적용 유뮤와 자동 Link를 행한다.
         (Max string size = 1000byte)
         Mode 0 : printf()와 동일하다, HTML이 적용됨을 뜻한다.
         Mode 1 : HTML TAG 자체를 출력한다. Link되는 부분 없음.
         Mode 2 : Mode 1 + 자동으로 link 시킴.
         Mode 3 : Mode 2 + link를 클릭했을시 전화면(target=_top) 출력한다.
         Mode 4 : HTML TAG를 무시한다. 출력되지 않음.
         Mode 5 : Mode 4 + 자동으로 Link 시킴.
         Mode 6 : Mode 5 + link를 클릭했을시 전화면(target=_top) 출력한다.         
         Mode 10  :Mode 0 + Convert
         Mode 11 : Print HTML TAG + Convert
         Mode 12 : Mode 11 + Auto Link
         Mode 13 : Mode 12 + Auto Link to _top frame
         Mode 14 : Waste HTML TAG + Convert
         Mode 15 : Mode 14 + Auto Link
         Mode 16 : Mode 15 + Auto Link to _top frame

         Convert : " "   -> " "
                   "  "  -> " &nbsp;"
                   "   " -> " &nbsp;&nbsp;"
                   "\r"  -> 무시
                   "\n"  -> "<br>\n"

         10 이상의 Mode 값은 <pre> 태그를 사용하지 않고, 연속된 공백을
         화면에 보여줄수 있다. 또한, 화면폭의 변화에 따라 자동으로 줄바꿈이
         된다.

  복귀 : 성공시 출력한 bytes 갯수, 에러시 EOF
  사용 : qPrintf(4, "%s", buf);
  예제 : qPrintf(i, "%s\n", "<font><b>\"http://shinan.hongik.ac.kr\"</b></font>");
         Mode 0 : <font><b>"http://shinan.hongik.ac.kr"</b></font>
         Mode 1 : &ltfont&gt&ltb&gt"http://shinan.hongik.ac.kr"&lt/b&gt&lt/font&gt
         Mode 2 : &ltfont&gt&ltb&gt"<a href="http://shinan.hongik.ac.kr" target="">http://shinan.hongik.ac.kr</a>"&lt/b&gt&lt/font&gt
         Mode 3 : &ltfont&gt&ltb&gt"<a href="http://shinan.hongik.ac.kr" target="_top">http://shinan.hongik.ac.kr</a>"&lt/b&gt&lt/font&gt
         Mode 4 : "http://shinan.hongik.ac.kr"
         Mode 5 : "<a href="http://shinan.hongik.ac.kr" target="">http://shinan.hongik.ac.kr</a>"
         Mode 6 : "<a href="http://shinan.hongik.ac.kr" target="_top">http://shinan.hongik.ac.kr</a>"

  void   qPuts(int mode, char *buf);
  기능 : 문자열을 HTML형식에 맞도록 출력한다. (qPrintf()와 기능 동일)
  주의 : 인자로 전해준 문자열이 변형된다.
         qPuts(mode, "문자열"); 이런식의 사용은 오류를 잃으킬수 있다.
         이때에는 아래의 사용법처럼 인자를 복사한후 사용한다.
  사용 : char buf[100];
         strcpy(buf, "http://shinan.hongik.ac.kr mailto:nobreak@shinan.hongik.ac.kr");
         qPuts(2, buf);
         

  void   qError(char *format, ...);
  기능 : 오류에대한 Message를 출력한다. printf() 함수와 사용법 동일.
         오류 메시지 하단의 개발자 접속 링크는 qDecoder.h의 CONTACT_INFO를
         수정하여 변경할수 있다.
         qErrLog()함수로 로그파일이 정의된경우 오류메시지가 파일시스템에 남는다.
         (Max string size = 1000byte)
  사용 : qError("오류메시지");
         qError("%s에 오류", buf);

  void   qErrLog(char *filename);
  기능 : qError() 함수를 부를때 전달되는 오류 메시지들을 별도의 로그파일로
         기록하도록 한다.
         로그를 기록할때, 본파일을 직접 호출하는것이 아니라, 
         qErrLog("logs/error.log") 와같이 프로그램 초기에 호출하면 그 후
         qError()가 호출될때마다, 'logs/error.log' 파일에 로그가 자동 기록
         된다.
  사용 : qErrLog("로그파일명");        // log enable
         qErrLog(NULL);                // log disable (default)


IV-6. 문자열 관련 함수군

  char   *qRemoveSpace(char *str);
  기능 : 문자열의 앞뒤 공백과 CR, LF를 제거한다.
  복귀 : 성공시 문자열의 포인터, 실패시 NULL
  주의 : qRemoveSpace("문자열"); 이런식의 사용은 오류를 잃으킬수 있다.
         이때에는 아래의 사용법처럼 인자를 복사한후 사용한다.
  사용 : char teststr[100];
         strcpy(teststr, " Hello, world    \r\n");
         qRemoveSpace(teststr);
         // 삭제후 teststr에는 "Hello, world"가 들어간다.

  int    qStr09AZaz(char *str);
  기능 : 문자열이 '0' - '9', 'A' - 'Z', 'a' - 'z'로 이루어졌는지 판별한다.
  복귀 : 조건에 부합하면 1, 오류시 0
  사용 : if(qStr09AZaz("abc1234") == 1) printf("True");

  char   *qStrBig(char *str);
  기능 : 인자로 주어진 문자열을 모두 대문자로 변환한다.
  복귀 : 해당 문자열을 포인터

  char   *qStrStr(char *orgstr, char *tokstr);
  기능 : strstr() 함수와 같으나, 대소문자를 구분하지 않고 비교한다.

IV-7. 시간 관련 함수군

  struct tm *qGetTime(void);
  기능 : 시간을 구조체 tm에 저장한다.
  복귀 : 구조체 tm의 포인터
  사용 : struct tm *mytime;
         mytime = qGetTime();

  time_t qGetGMTime(char *gmt, time_t plus_sec);
  기능 : '현재시간+plus_sec'을 Cookie에서 사용하는 GMT 문자열 시간으로 변환한다.
  복귀 : 1970/1/1(00:00:00)부터 현제까지의 초 + plus_sec
  사용 : time_t plus_sec;
         char gmt[0xff];
         plus_sec = (time_t)300; /* 5분 */
         qGetGMTime(gmt, plus_sec);
         printf("%s", gmt);         /* "Fri, 22-Aug-1997 15:11:30 GMT" */

IV-8. 기타 함수군

  int    qCheckEmail(char *email){
  기능 : E-mail 주소의 오류를 판별한다.
  복귀 : 오류가 없으면 1, 문제가 발생하면 0
  사용 : qCheckEmail("nobreak@shinan.hongik.ac.kr");

  int    qCheckURL(char *url);
  기능 : URL 주소의 오류를 판별한다.
  복귀 : 오류가 없으면 1, 문제가 발생하면 0
  사용 : qCheckURL("http://shinan.hongik.ac.kr");

  void   qDownload(char *filename);
  기능 : 클라이언트로 파일을 전송하는데, 파일의 종류에 상관없이
         브라우저에 다운로딩 상자가 나타나도록 한다.
  사용 : qDownload("/home/nobreak/myprg.exe");

  char   *qitocomma(int value);
  기능 : 숫자를 콤마 문자열로 변환한다.
  사용 : printf("Price = %s", qitocomma(1234567));
         Price = 1,234,567


+--------------------------------------------------------------------+
| V. 예제 (Examples)                                                 |
+--------------------------------------------------------------------+

V-1. 전달된 인자를 모두 출력하는 CGI

    #include "qDecoder.h"

    void main(void){
      qPrint();
    }

    위의 소스를 test.c로 저장한후 다음과 같이 Compile하자.
    (같은 디렉토리에 qDecoder.c와 qDecoder.h가 존재해야함)

    gcc -o test.cgi test.c qDecoder.c
    
    Browser상에서 다음과 같이 실행하여 결과를 확인한다.

    URL -> http://서버URL/test.cgi가있는디렉토리/test.cgi?a=b&c=de

    출력결과는 다음과 같다.

    'a' = 'b'
    'c' = 'de'  

V-2. 원하는 인자('a')를 선택하여 화면 출력

    #include "stdio.h"
    #include "qDecoder.h"

     void main(void){
       char *value;

       qContentType("text/html");

       value = qValue("a");
       printf("test a = %s", value);
     }
   
    예제 1과 같이 Compile 한후 같은 방법으로 실행한다.

    출력결과는 다음과 같다.

    test a = b

V-3. 정확한 함수 호출 절차

    #include "qDecoder.h"

    void main(void){
      qDecoder();
      qContentType("text/html");

      사용자 Code

      qFree();
    }

    qDecoder(), qFree()는 생략가능하다.
   

V-4. Compile

  GCC 사용자
    gcc -o 실행화일명 작성한소스.c qDecoder.c
    ex) gcc -o test.cgi main.c qDecoder.c
    ex) gcc -o test.cgi main.c sub.c qDecoder.c

  CC 사용자
    cc -o 실행화일명 작성한소스.c qDecoder.c
    ex) cc -o test.cgi main.c qDecoder.c

  Library 제작 사용
    qDecoder 디렉토리에서 make를 실행한다.
    $ cd qDecoder
    $ make
    gcc -I. -Wall -c -o qDecoder.o qDecoder.c
    ar -q libqDecoder.a qDecoder.o
    ranlib libqDecoder.a

    $ gcc -o test.cgi main.c libqDecoder.a

  라이브러리 설치
    $ cd qDecoder
    $ make install
    $ gcc -o test.cgi main.c -lqDecoder

  라이브러리 제거
    $ make deinstall

V-5. Example Makefile

## Define
CC      = gcc -Wall        # For GNU C Compiler(gcc)
#CC      = cc               # For the other C Compiler

OBJ  = $(OBJ1) $(OBJ2)
OBJ1 = qDecoder.o
OBJ2 = YourMain.o YourSub.o

PRG_NAME = test.cgi

## Main
all:    $(PRG_NAME)

## Link Module
$(PRG_NAME): $(OBJ)
        $(CC) -o $(PRG_NAME) $(OBJ)

## Compile Module
%.o:    %.c
        $(CC) -c -o $@ $<

## Clear Module
clean:  rm -f $(OBJ) $(PRG_NAME)

+-----------------------------------------------------+
+------------------ E     N     D --------------------+
+-----------------------------------------------------+
